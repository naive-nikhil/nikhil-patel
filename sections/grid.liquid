{{ 'section-grid.css' | asset_url | stylesheet_tag }}

{% comment %} Modal for product popup {% endcomment %}
<div class="product-modal">
  <div class="product-modal__dialog">
    <button class="product-modal__close" onclick="closeModal()"><img src="{{'cross.svg' |  asset_url}}"></button>
    <div class="product-modal__body">
      <div class="product-modal__image-wrapper">
        <img class="product-modal__image" src="{{'product-image-2.png' |  asset_url}}">
      </div>
      <div class="product-modal__details">
        <p class="product-modal__title">Leather Jacket</p>
        <h2 class="product-modal__price">980,00$</h2>
        <p class="product-modal__description">This one-piece swimsuit is crafted from jersey featuring all allover micro Monogram motif in relief.</p>
      </div>
    </div>
    <div class="product-modal__color-picker">
      <p class="product-modal__label">Color</p>
      <div class="product-modal__color-options">
        <div class="product-modal__color-indicator"></div>
        <div class="product-modal__color-option product-modal__color-option--1">Black</div>
        <div class="product-modal__color-option product-modal__color-option--2">White</div>
      </div>
    </div>
    <div class="product-modal__size-picker">
      <p class="product-modal__label">Size</p>
      <div class="product-modal__size-options">
        <div class="product-modal__size-placeholder">Choose your size</div>
        <div class="product-modal__size-toggle"><img class="product-modal__size-toggle-icon" src="{{'select-arrow.svg' | asset_url}}"></div>
      </div>
      <div class="product-modal__size-dropdown" data-isOpen="false"></div>
    </div>
    {%  render 'custom-button' text: 'Add To Cart', variant: 'primary', id: 'product-modal__add-to-cart' %}
  </div>
</div>

{% comment %} Main grid for showcasing collection of products {% endcomment %}
<div class="product-grid">
  <div class="product-grid__content">
    <h1 class="product-grid__title">Tisso Vision in the wild</h1>
    <div class="product-grid__list">
      {% for product in collections["frontpage"].products %}
        <div class="product-grid__item" data-product="{{ product | json |  escape }}"><img class="product-grid__image" src="{{ product.featured_image | img_url: '600x' }}"></div>
      {% endfor %}
    </div>
  </div>
</div>

<script>
  const modalEls = {
    container: document.querySelector(".product-modal"),
    image: document.querySelector(".product-modal__image"),
    title: document.querySelector(".product-modal__title"),
    price: document.querySelector(".product-modal__price"),
    description: document.querySelector(".product-modal__description")
  }

  const sizeEls = {
    placholder: document.querySelector(".product-modal__size-placeholder"),
    button: document.querySelector(".product-modal__size-toggle"),
    icon: document.querySelector(".product-modal__size-toggle-icon"),
    dropdown: document.querySelector(".product-modal__size-dropdown")
  }

  function openModal(productData){
    modalEls.container.style.display = "flex";

    modalEls.image.src = productData.featured_image;
    modalEls.title.textContent = productData.title;
    modalEls.price.textContent = `${(productData.price/100).toFixed(2)} €`;
    modalEls.description.innerHTML = productData.description;

    renderSizes(productData.variants);
  }

  function toggleDropdown({open, el, icon} = {}){
    let isOpen = el.dataset.isOpen === "true";
    isOpen = open ?? !isOpen;
    el.style.height = isOpen ? "200%" : "0";
    if(icon){
      icon.style.transform = isOpen ? "rotate(-180deg)" : "rotate(0)";
    }

    el.dataset.isOpen = isOpen;
  }

  function renderSizes(variants){
    const sizes = [...new Set(variants.map(v=>v.option1).filter(Boolean))];
    sizeEls.dropdown.innerHTML = sizes.map(size=>`<div class='product-modal__size-option'>${size}</div>`).join("");
  }

  function closeModal(){
    modalEls.container.style.display = "none";
  }

  sizeEls.button.addEventListener("click", ()=>{
    toggleDropdown({el: sizeEls.dropdown, icon: sizeEls.icon});
  })

  document.querySelectorAll(".product-grid__item").forEach((productEl)=>{
    productEl.addEventListener("click", ()=>{
      const data = JSON.parse(productEl.dataset.product);
      openModal(data);
    })
  })
  
  // const sizeSelectorButton = document.querySelector(".icon");
  // const sizeSelectorButtonIcon = document.querySelector(".select-arrow");
  // const sizeSelectorDropdown = document.querySelector(".size-dropdown");
  // const sizeOptions = document.querySelectorAll(".size-option");
  // const choose = document.querySelector(".choose");
  
  // const colorOptions = document.querySelector(".color-options")
  // const color1 = document.querySelector(".color1");
  // const color2 = document.querySelector(".color2");
  
  // const colorDivs = document.querySelectorAll(".color1, .color2");
  
  // const bar = document.querySelector(".animator");
  
  // products.forEach(product => {
  //   product.addEventListener("click", ()=>{
  //     const data = JSON.parse(product.dataset.product);
  
  //     const variants = data.variants;
  
  //     const sizes = [...new Set(variants.map(v => v.option1).filter(Boolean))];
  //     const colors = [...new Set(variants.map(v => v.option2).filter(Boolean))];
  
  //     modal.style.display = "flex";
  //     productImage.src = data.featured_image;
  //     productTitle.textContent = data.title;
  //     productPrice.textContent = `${(data.price/100).toFixed(2)} €`;
  //     productDescription.innerHTML = data.description;
  
  //     sizeSelectorDropdown.innerHTML = "";
  
  //     sizes.forEach(size => {
  //       const div = document.createElement("div");
  //       div.classList.add("product-modal__size-option");
  //       div.textContent = size;
  //       sizeSelectorDropdown.appendChild(div);
  //     });
  
  //     colors.forEach((color, index)=>{
  //       if(colorDivs[index]){
  //         colorDivs[index].textContent = color;
  //       }
  //     })
  //   })
  // })
  
  // closeModal.addEventListener("click", ()=>{
  //   modal.style.display = "none";
  // })
  
  
  // color2.addEventListener("click", ()=>{
  //   bar.style.transform = "translateX(100%)";
  //   color2.style.color = "#fff";
  //   color1.style.color = "#000";
  // })
  
  // color1.addEventListener("click", ()=>{
  //   bar.style.transform = "translateX(0%)";
  //   color1.style.color = "#fff";
  //   color2.style.color = "#000";
  // })
  
  // sizeSelectorDropdown.addEventListener("click", (e)=>{
  //     if(e.target.classList.contains("product-modal__size-option")){
  //       sizeSelectorDropdownIsOpen = !sizeSelectorDropdownIsOpen;
  //       toggleDropdown();
  //       choose.innerText = e.target.innerText;
  //     }
  // })
  
  // sizeOptions.forEach(option => {
  //   option.addEventListener("click", ()=>{
  //     sizeSelectorDropdownIsOpen = !sizeSelectorDropdownIsOpen;
  //     toggleDropdown();
  //     choose.innerText = option.innerText;
  //   })
  // })
  
  
  // let sizeSelectorDropdownIsOpen = false;
  
  // function toggleDropdown(){
  // if(sizeSelectorDropdownIsOpen){
  //     choose.innerText = "Choose your size"
  //     sizeSelectorButtonIcon.style.transform = "rotate(-180deg)";
  //     sizeSelectorDropdown.style.height = "200%";
  //     sizeSelectorDropdown.style.transform = "translateY(0)";
  //   }else{
  //     choose.innerText = "Choose your size"
  //     sizeSelectorButtonIcon.style.transform = "rotate(0)";
  //     sizeSelectorDropdown.style.height = "0";
  //     sizeSelectorDropdown.style.transform = "translateY(-1px)";
  //   }
  // }
  
  // sizeSelectorButton.addEventListener("click", ()=>{
  //   sizeSelectorDropdownIsOpen = !sizeSelectorDropdownIsOpen;
  //   toggleDropdown();
  // })
</script>

{% schema %}
  {
    "name": "Grid",
    "settings": []
  }
{% endschema %}